CREATE TABLE CATEGORIES(
CAT_CODE        NCHAR(2),
CAT_NAME        NVARCHAR2(100)
)TABLESPACE USERS;

ALTER TABLE CATEGORIES ADD CONSTRAINT CAT_CODE_PK PRIMARY KEY(CAT_CODE);

INSERT INTO CATEGORIES(CAT_CODE, CAT_NAME) VALUES('S1', '비스켓류');
INSERT INTO CATEGORIES(CAT_CODE, CAT_NAME) VALUES('S2', '쿠키');

ALTER TABLE CATEGORIES MODIFY CAT_NAME NOT NULL

ALTER TABLE CATEGORIES ADD CONSTRAINT CAT_NAME_UK UNIQUE(CAT_NAME)

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE STATS(
STAT_CODE       NUMBER(1,0),
STAT_NAME       NVARCHAR2(10)
)TABLESPACE USERS;

ALTER TABLE STATS ADD CONSTRAINT STAT_CODE_PK PRIMARY KEY(STAT_CODE);

ALTER TABLE STATS MODIFY STAT_NAME NOT NULL
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('1', '판매가능');
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('-1', '판매불가');
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('5', '주문진행중');
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('6', '결제중');
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('7', '결제완료');
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('8', '보류');

INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('9', '매장오픈');
INSERT INTO STATS(STAT_CODE, STAT_NAME) VALUES('-9', '매장클로즈');

ALTER TABLE STATS ADD CONSTRAINT STAT_NAME_UK UNIQUE(STAT_NAME)

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE PRODUCT(
PR_CODE           NCHAR(5),
PR_NAME          NVARCHAR2(20),
PR_COST           NUMBER(7,0),
PR_PRICE          NUMBER(7,0),
PR_STOCKS       NUMBER(3,0),
PR_DISCOUNT   NUMBER(2,0),
PR_CATCODE     NCHAR(2),
PR_STATCODE    NUMBER(1,0)
)TABLESPACE USERS;

ALTER TABLE PRODUCT ADD CONSTRAINT PR_CODE_PK PRIMARY KEY(PR_CODE);

ALTER TABLE PRODUCT
MODIFY PR_NAME NOT NULL
MODIFY PR_CODE NOT NULL
MODIFY PR_COST DEFAULT 0 NOT NULL
MODIFY PR_PRICE DEFAULT 0 NOT NULL
MODIFY PR_STOCKS DEFAULT 0 NOT NULL
MODIFY PR_DISCOUNT DEFAULT 0 NOT NULL
MODIFY PR_CATCODE NOT NULL
MODIFY PR_STATCODE NOT NULL;

ALTER TABLE PRODUCT
ADD CONSTRAINT PR_CATCODE_FK FOREIGN KEY(PR_CATCODE) REFERENCES CATEGORIES(CAT_CODE)
ADD CONSTRAINT PR_STATCODE_FK FOREIGN KEY(PR_STATCODE) REFERENCES STATS(STAT_CODE);

ALTER TABLE PRODUCT ADD CONSTRAINT PR_NAME_UK UNIQUE(PR_NAME)

ALTER TABLE DBA1JO.PRODUCT
ADD CONSTRAINT PR_STOCKS_CK CHECK(PR_STOCKS >= 0);

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE CUSTOMER(

CU_CODE           NCHAR(5),
CU_NAME          NVARCHAR2(6),
CU_PHONE         NUMBER(11,0),
CU_RACODE       NCHAR(5)

)TABLESPACE USERS;

ALTER TABLE CUSTOMER
ADD CONSTRAINT CU_CODE_PK PRIMARY KEY(CU_CODE)

ALTER TABLE DBA1JO.CUSTOMER
ADD CONSTRAINT CU_PHONE_UK UNIQUE(CU_PHONE);

ALTER TABLE DBA1JO.CUSTOMER
ADD CONSTRAINT CU_RACODE_FK FOREIGN KEY(CU_RACODE) REFERENCES RANKS(RA_CODE);

ALTER TABLE DBA1JO.CUSTOMER
MODIFY CU_NAME NOT NULL
MODIFY CU_PHONE NOT NULL
MODIFY CU_RACODE NOT NULL;

INSERT INTO CUSTOMER(CU_CODE, CU_NAME, CU_PHONE, CU_RACODE)
VALUES('9999', '비회원고객', 00000000000, 'X')

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE RANKS(

RA_CODE          NCHAR(5),
RA_RANKS        NVARCHAR2(6)

)TABLESPACE USERS;

ALTER TABLE RANKS 
ADD CONSTRAINT RA_CODE_PK PRIMARY KEY(RA_CODE)

ALTER TABLE DBA1JO.RANKS
MODIFY RA_RANKS NOT NULL

INSERT INTO RANKS(RA_CODE, RA_RANKS) VALUES('1', 'BRONZE');
INSERT INTO RANKS(RA_CODE, RA_RANKS) VALUES('2', 'SILVER');
INSERT INTO RANKS(RA_CODE, RA_RANKS) VALUES('3', 'GOLD');
INSERT INTO RANKS(RA_CODE, RA_RANKS) VALUES('X', '비회원');

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE STORES(

SE_CODE             NCHAR(5),
SE_NAME             NVARCHAR2(20),
SE_OPEN             NUMBER(4,0),
SE_CLOSE            NUMBER(4,0)

)TABLESPACE USERS;

ALTER TABLE STORES
ADD CONSTRAINT SE_CODE_PK PRIMARY KEY(SE_CODE);

ALTER TABLE STORES
MODIFY SE_NAME NOT NULL
MODIFY SE_OPEN DEFAULT 0 NOT NULL
MODIFY SE_CLOSE DEFAULT 0 NOT NULL

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE EMPLOYEE(

EM_SECODE       NCHAR(5),
EM_CODE           NCHAR(5),
EM_NAME          NVARCHAR2(4)

)TABLESPACE USERS;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EM_SECODE_CODE_PK PRIMARY KEY (EM_SECODE, EM_CODE)
ADD CONSTRAINT EM_SECODE_FK FOREIGN KEY(EM_SECODE) REFERENCES STORES(SE_CODE);

ALTER TABLE EMPLOYEE
MODIFY EM_SECODE NOT NULL
MODIFY EM_CODE NOT NULL
MODIFY EM_NAME NOT NULL;



----------------------------------------------------------------------------------------------------------------------

CREATE TABLE POS(

POS_SECODE       NCHAR(5),
POS_CODE           NCHAR(5)

)TABLESPACE USERS;

ALTER TABLE POS
ADD CONSTRAINT POS_SECODE_CODE_PK PRIMARY KEY(POS_SECODE, POS_CODE);
ALTER TABLE POS
ADD CONSTRAINT POS_SECODE_FK FOREIGN KEY(POS_SECODE) REFERENCES STORES(SE_CODE);


ALTER TABLE POS
MODIFY POS_SECODE NOT NULL
MODIFY POS_CODE NOT NULL;

ALTER TABLE POS
MODIFY POS_CODE NCHAR(1);



ALTER TABLE POS
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10001, 1);     
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10001, 2);
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10002, 1);
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10002, 2);
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10003, 1);
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10003, 2);
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10004, 1);
INSERT INTO POS(POS_SECODE, POS_CODE)
        VALUES(10004, 2);
    
----------------------------------------------------------------------------------------------------------------------

CREATE TABLE ORDERS(

OD_CODE           NCHAR(14),
OD_SECODE         NCHAR(3),
OD_PSCODE         NCHAR(2),
OD_CUCODE         NCHAR(4),
OD_STATES         NCHAR(1)

)TABLESPACE USERS;
ALTER TABLE ORDERS MODIFY OD_STATES NUMBER(1,0);
ALTER TABLE ORDERS
ADD CONSTRAINT OD_CODE_PSCODE_SECODE_PK PRIMARY KEY(OD_CODE, OD_PSCODE, OD_SECODE)

ALTER TABLE ORDERS
ADD CONSTRAINT OD_SECODE_FK FOREIGN KEY(OD_SECODE) REFERENCES STORES(SE_CODE);
ALTER TABLE ORDERS
ADD CONSTRAINT OD_CUCODE_FK FOREIGN KEY(OD_CUCODE) REFERENCES CUSTOMER(CU_CODE);
ALTER TABLE ORDERS
ADD CONSTRAINT OD_PSCODE_FK FOREIGN KEY(OD_SECODE, OD_PSCODE) REFERENCES POS(POS_SECODE, POS_CODE);
ALTER TABLE ORDERS
ADD CONSTRAINT OD_STATES_FK FOREIGN KEY(OD_STATES) REFERENCES STATS(STAT_CODE);
ALTER TABLE ORDERS
ADD OD_STATES NCHAR(1);

ALTER TABLE ORDERS
MODIFY OD_SECODE NCHAR(5);

ALTER TABLE ORDERS
MODIFY OD_CODE DEFAULT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');

ALTER TABLE ORDERS
MODIFY OD_CUCODE NCHAR(5);

ALTER TABLE ORDERS
MODIFY OD_PSCODE NCHAR(5);
ALTER TABLE ORDERS
MODIFY OD_SECODE NCHAR(5);

ALTER TABLE ORDERS
MODIFY OD_PSCODE NCHAR(1);



----------------------------------------------------------------------------------------------------------------------

CREATE TABLE ORDERDETAILS(

ODD_ODCODE          NCHAR(14),
ODD_SECODE           NCHAR(3),
ODD_PSCODE           NCHAR(2),
ODD_PRCODE           NCHAR(5),
ODD_QUANTITY        NUMBER(2,0) DEFAULT 1

)TABLESPACE USERS; 

ALTER TABLE ORDERDETAILS
ADD CONSTRAINT ODD_OD_SE_PS_PR_CODE_PK PRIMARY KEY(ODD_ODCODE, ODD_PSCODE, ODD_SECODE, ODD_PRCODE)

ALTER TABLE ORDERDETAILS
ADD CONSTRAINT ODD_OD_SE_PS_CODE_FK FOREIGN KEY(ODD_ODCODE, ODD_SECODE, ODD_PSCODE) REFERENCES ORDERS(OD_CODE,OD_SECODE,OD_PSCODE);

ALTER TABLE ORDERDETAILS
ADD CONSTRAINT ODD_PRCODE_FK FOREIGN KEY(ODD_PRCODE) REFERENCES PRODUCT(PR_CODE)

ALTER TABLE ORDERDETAILS
MODIFY ODD_QUANTITY NOT NULL;


COMMIT;


/* 3. POINT :: PI
    PK      PI_ODCODE   NCHAR(14),
    PK FK   PI_CUCODE   NCHAR(4),
       NN   PI_POINTS   NUMBER(5,0),
       DF   PI_STATES   NUMBER(1,0)
*/
CREATE TABLE POINTS(
 PI_ODCODE      NCHAR(14),
 PI_CUCODE      NCHAR(4),
 PI_POINTS      NUMBER(5,0),
 PI_STATES      NUMBER(1,0)
)TABLESPACE USERS;

ALTER TABLE POINTS
ADD CONSTRAINT PI_ODCODE_CUCODE_PK PRIMARY KEY(PI_ODCODE, PI_CUCODE)
ADD CONSTRAINT PI_CUCODE_FK FOREIGN KEY (PI_CUCODE) REFERENCES CUSTOMER(CU_CODE)
MODIFY PI_POINTS NOT NULL
MODIFY PI_STATES DEFAULT 1 NOT NULL;

/* JOB PROCESS 
   1. INSERT
      INSERT INTO [TAB_NAME](COL_NAME, ..., [COL_NAME])
                    VALUES([VALUE], ..., [VALUE]);
   2. UPDATE
      UPDATE [TAB_NAME] SET [COL_NAME] = [VALUE], ...,[COL_NAME] = [VALUE] --> 테이블의 전체 레코드에 영향
            WHERE [CONDITION];  CONDITION = [COL_NAME][비교연산자][VALUE]
   3. DELETE
      DELETE FROM [TAB_NAME]  --> 전체 레코드에 영향
            WHERE [CONDITION];  CONDITION = [COL_NAME][비교연산자][VALUE]
   4. SELECT
    * SELECT
    * FROM
    * WHERE
      GROUP BY
      HAVING
      ORDER BY
*/    
/* 1. 매장오픈
    CLIENT DATA --> 매장코드, 직원코드, 상태
    ACCESS TABLE --> SH : INSERT
*/ 

-- 2. 매장 클로즈
/* 3. 상품등록
    TABLE : DBA1JO.PRODUCT :: PR <-- INSERT
    SELECT * FROM PR;
    CLIENT : PR_CODE, ...
*/
-- DBA
    SELECT * FROM USER_TAB_COLS WHERE TABLE_NAME = 'PRODUCT';
    SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = '';
    3-1 상품코드 중복 조회 :: PRIMARY KEY OR UNIQUE 컬럼의 데이터 중복 조회
    3-2 상품 INSERT 
    3-3 상품등록 정보 조회
    
-- 3-1 20001
SELECT *
FROM  PR
WHERE PR_CODE = '20001';

-- 3-2 INSERT --> RETURN 1 --> 3-3.
    INSERT INTO PR(PR_CODE, PR_NAME, PR_COST, PR_PRICE, PR_STOCKS, PR_DISCOUNT, PR_CATCODE, PR_STATCODE)
                VALUES('80001', '아이스크림', 500, 990, 20, 0, 'S3', 1);
            COMMIT;

-- 3-3. 등록 상품 정보 가져오기
    SELECT *
    FROM  PR
    WHERE PR_CODE = '80001';
    
/* 4. 상품 수정
    CLIENT DATA : PR_CODE , 변경할 데이터 집합
        --> PR_NAME, PR_COST, PR_PRICE, PR_STOCKS, PR_DISCOUNT, PR_CATCODE, PR_SECODE
        UPDATE [TAB] SET [COL] = [NEW_VALUE] WHERE [CONDITION]
        -- UPDATE EX1
        UPDATE PR SET PR_STOCKS = PR_STOCKS - [증감 숫자] WHERE PR_CODE = '';
        
        SELCT * FROM PR WHERE PR_CODE = '[USER_DATA]'
        --> JAVA BEAN 저장
        --> CLIENT에서 전달되어진 변경할 데이터에 해당하지 않는 데이터는 BEAN에 있는 값으로 대체
        UPDATE PR SET PR_NAME = '[NEW_NAME]', PR_COST = [NEW_COST] , PR_PRICE = [NEW_PRICE],
               PR_DISCOUNT = [NEW_DISCOUNT], PR_CATCODE = '[NEW_CATCODE]',
               PR_SECODE = [NEW_SECODE] WHERE PR_CODE = '[USER-DATA]'
    
    SELECT PR_CODE, PR_NAME FROM PR;
--4-1

*/

-- 5. 회원 등록
-- 5-1. RETURN : 기존코드 + 1

-- 5-2. CU 테이블에 INSERT

-- 5-3. 등록된 회원정보 검색


-- 5-1. RETURN : 기존코드 + 1
SELECT TO_CHAR(TO_NUMBER(MAX(CU_CODE))+1) FROM CU WHERE CU_CODE != '9999';

SELECT *
FROM  CU
WHERE CU_CODE = 'TO_NUMBER(MAX(CU_CODE))+1)';

-- 5-2. INSERT RETURN : 1 등록성공
INSERT INTO CU(CU_CODE, CU_NAME, CU_PHONE, CU_RACODE)
        VALUES ('20002', '나한울', 01295874542, 1);
COMMIT;
-- 5-3. SELECT : WHERE CU_CODE = TO_NUMBER(MAX(CU_CODE))+1)
SELECT *
FROM  CU
WHERE CU_CODE = '20002';

--* 6. 회원 수정
    -- 등록된 회원정보 출력
    SELECT * FROM PS;
    -- 회원 코드, 회원 전화번호 받기

    -- 회원 정보 수정
    --> JAVA BEAN 저장
    --> CLIENT에서 전달되어진 변경할 데이터에 해당하지 않는 데이터는 BEAN에 있는 값으로 대체
    UPDATE CU SET CU_PHONE = '[NEW_PHONE]' WHERE CU_CODE = '[USER-DATA]'
 
-- 7. 회원 삭제
--* 8. 주문 등록
    -- CLIENT에서  상품 코드, 구매수량 입력
    INSERT INTO OD(OD_CODE, OD_SECODE, OD_PSCODE, OD_CUCODE, OD_STATES)
            VALUES(DEFAULT, '10001', '1', '20002', 5);
        SELECT * FROM OD;

    --  주문 리스트 출력
    INSERT INTO ODD(ODD_ODCODE, ODD_SECODE, ODD_PSCODE, ODD_PRCODE, ODD_QUANTITY)
            VALUES('20211125181421', '10001', '1', '20002', 20);
    SELECT * FROM ODD;
    
--* 9. 주문 수정
    -- 구매 수량 수정, 주문 상태 수정
    --> JAVA BEAN 저장
    --> CLIENT에서 전달되어진 변경할 데이터에 해당하지 않는 데이터는 BEAN에 있는 값으로 대체
    UPDATE ODD SET ODD_QUANTITY = 6 WHERE ODD_PRCODE = '20002'
    UPDATE OD SET OD_STATES = 6 WHERE OD_CODE = '20211125181421'
    COMMIT;
    
--* 10. 매장 등록
    --CLIENT에서 매장코드, 매장명, 오픈시간, 마감시간 입력
    INSERT INTO SE(SE_CODE, SE_NAME, SE_OPEN, SE_CLOSE)
            VALUES(10005,'송도점',1000,2200);
            SELECT * FROM SE;
            
--* 10. 매장 수정
    --CLIENT에서 매장명 변경
    --> JAVA BEAN 저장
    --> CLIENT에서 전달되어진 변경할 데이터에 해당하지 않는 데이터는 BEAN에 있는 값으로 대체
    UPDATE SE SET SE_NAME = '이마점' WHERE SE_CODE = '10005';
    SELECT * FROM SE;
    
--* 11. 포스 등록
    -- CLIENT에서 매장코드, 포스코드 입력
    INSERT INTO POS(POS_SECODE, POS_CODE)
            VALUES('10001','3');
            SELECT * FROM POS;
--* 11. 포스 수정
    --CLIENT에서 매장코드, 포스코드 입력
    --> JAVA BEAN 저장
    --> CLIENT에서 전달되어진 변경할 데이터에 해당하지 않는 데이터는 BEAN에 있는 값으로 대체
    UPDATE POS SET POS_CODE = '4' WHERE POS_CODE = '2';
-- 12. 직원 등록
-- 12. 직원 수정
-- 13. 매출 통계
-- 14. 상품 검색
-- 15. 회원 검색
-- 16. 매장 검색
-- 17. 직원 검색
-- 18. 주문 검색
-- 19. 포인트 통계


/*  STORE HISTORY :: SOC
    PK DF   일자          NCHAR(14)
    PK FK   매장코드       NCHAR(3)
    PK FK   직원코드       NCHAR(5)
    NN DF 9 상태          NUMBER(1,0) 9 : 매장오픈    -9 : 매장클로즈
    INSERT INTO ST(ST_CODE, ST_NAME) VALUES(9, '매장오픈');
    INSERT INTO ST(ST_CODE, ST_NAME) VALUES(-9, '매장클로즈');
*/

CREATE TABLE STOREHISTORY(
 SH_CODE        NCHAR(14),
 SH_EMSECODE    NCHAR(5),
 SH_EMCODE      NCHAR(3),
 SH_STATES      NUMBER(1,0)
)TABLESPACE USERS;
ALTER TABLE STOREHISTORY MODIFY SH_EMCODE NCHAR(5);

ALTER TABLE STOREHISTORY
--ADD CONSTRAINT SH_CODE_EMSECODE_EMCODE_PK PRIMARY KEY(SH_CODE,SH_EMSECODE,SH_EMCODE)
ADD CONSTRAINT SH_EMSECODE_EMCODE_FK FOREIGN KEY (SH_EMSECODE, SH_EMCODE) REFERENCES EMPLOYEE(EM_SECODE, EM_CODE)

MODIFY SH_STATES DEFAULT 9 NOT NULL
MODIFY SH_CODE DEFAULT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
COMMIT;

----------------------------------------------------------------------------------------------------------------------

SELECT * FROM PR
SELECT * FROM PS
SELECT * FROM "EM"
SELECT * FROM RA
SELECT * FROM CU
SELECT * FROM SE
SELECT * FROM CA
SELECT * FROM ST

GRANT SELECT, INSERT, UPDATE ON DBA1JO.PRODUCT TO DM21;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.PRODUCT TO DH21;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.PRODUCT TO SW22;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.PRODUCT TO GJ21;

GRANT SELECT, INSERT, UPDATE ON DBA1JO.ORDERS TO GJ21,SW22,DH21,DM21;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.ORDERDETAILS TO GJ21,SW22,DH21,DM21;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.POINTS TO GJ21,SW22,DH21,DM21;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.STOREHISTORY TO GJ21,SW22,DH21,DM21;
GRANT SELECT, INSERT, UPDATE ON DBA1JO.STORES TO GJ21,SW22,DH21,DM21;


CREATE PUBLIC SYNONYM CA FOR DBA1JO.CATEGORIES;
CREATE PUBLIC SYNONYM SE  FOR DBA1JO.STORES;
CREATE PUBLIC SYNONYM "EM" FOR DBA1JO.EMPLOYEE;
CREATE PUBLIC SYNONYM ST FOR DBA1JO.STATS;
CREATE PUBLIC SYNONYM PS FOR DBA1JO.POS;
CREATE PUBLIC SYNONYM RA FOR DBA1JO.RANKS;
CREATE PUBLIC SYNONYM CU FOR  DBA1JO.CUSTOMER;
CREATE PUBLIC SYNONYM PR FOR DBA1JO.PRODUCT;
CREATE PUBLIC SYNONYM SH FOR DBA1JO.STOREHISTORY;
CREATE PUBLIC SYNONYM PI FOR DBA1JO.POINTS;
CREATE PUBLIC SYNONYM OD FOR DBA1JO.ORDERS;
CREATE PUBLIC SYNONYM ODD FOR DBA1JO.ORDERDETAILS;
----------------------------------------------------------------------------------------------------------------------

