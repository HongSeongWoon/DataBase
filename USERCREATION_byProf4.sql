/*  DATABASE LANGUAGE
    - DDL(DATA DEFINITION LANGUAGE)
        : 정의어 == 틀을 만든다.
        : CREATE [OBJECT] [OBJ_NAME]
        : ALTER [OBJECT] [OBJ_NAME] 
        : DROP [OBJECT] [OBJ_NAME]
    - DML(DATA MULTIPULATION LANGUAGE)
    - DCL(DATA CONTROL LANGUAGE)
        : PRIVILEIGE(권한 관리), 
           GRANT [PRIV_NAME], ..., [PRIV_NAME]  TO [USER_NAME];
           REVOKE [PRIV_NAME], ..., [PRIV_NAME]  FROM [USER_NAME];
        : TRANSACTION(트랜잭션 관리)
    - QL(QUERY LANGUAGE)
*/
/* User Creation 
    -- SYNTAX
    *  CREATE USER [USER_NAME]
    *  IDENTIFIED BY "[PASSWORD]"
    *- DEFAULT TABLESPACE [TBS_NAME]
       TEMPORARY TABLESPACE [TBS_NAME]
       QUOTA [[NUMBER [K|M|G]] | UNLIMITED] ON [TBS_NAME]
       
  실습 1 
   각 팀의 DBA가 팀원들이 사용할 계정을 생성
   - MEMBER1 / HOONZZANG / 1234
   - MEMBER2 / ZZANG / 1234
   - MEMBER3 / HOON / 1234
   - MEMBER4 / ZZANGZZANG / 1234
*/

CREATE USER HOONZZANG 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO HOONZZANG;

CREATE USER ZZANG 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO HOONZZANG;

CREATE USER HOON 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO HOON;

CREATE USER ZZANGZZANG 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO ZZANGZZANG;

/* 특정 계정에 대해 연결권한 철회 */
REVOKE CREATE SESSION FROM HOONZZANG;

/* 모든 계정을 삭제 */
DROP USER HOONZZANG;


/* 권한 설정
 1. SYSTEM PRIVS : CREATE SESSION, CREATE TABLE, CREATE VIEW, ....
    --> ROLE : CONNECT, RESOURCE, DBA
              + CREATE VIEW
 2. OBJECT PRIVS
*/
/* DBA  : HOONZZANG / 1234  <- DBA
   DEV  : DEV1 / 1234 <- RESOURCE
          DEV2 / 1234 <- CONNECT
          DEV3 / 1234 <- CONNECT RESOURCE
          DEV4 / 1234 <- CONNECT RESOURCE CREATE VIEW
*/
-- 사용자 조회
SELECT * FROM DBA_USERS;
DROP USER ZZANG;

-- CREATE DBA   <<< SYS
CREATE USER HOONZZANG 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;

GRANT DBA TO HOONZZANG;

/* DBA접속 */
CREATE USER DEV 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;

GRANT CONNECT, RESOURCE, CREATE VIEW TO DEV;

CREATE USER DEV2 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;

GRANT CONNECT TO DEV2;  
/* CREATE TABLE TEST(COL NCHAR(1)) TABLESPACE USERS; */

CREATE USER DEV3 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;
GRANT CONNECT, RESOURCE TO DEV3;
/* CREATE TABLE TEST(COL NCHAR(1)) TABLESPACE USERS; */

CREATE USER DEV4 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;

GRANT CONNECT, RESOURCE, CREATE VIEW TO DEV4;
/* CREATE TABLE TEST(COL NCHAR(1)) TABLESPACE USERS; 
   CREATE VIEW VTEST AS SELECT SYSDATE AS "DATETIME" FROM DUAL;
*/

DROP USER DEV4; 
DROP USER DEV3;
DROP USER DEV2;
DROP USER DEV1;


/* TABLE 
    : 데이터베이스의 기본적인 데이터 저장 객체
    : 레코드와 레코드를 구성하는 컬럼
    : 1:N의 관계  < RDBMS 
    
   ENTITY == DATASET
*/
/* 상품관련 테이블 리스트
  -- 분류 테이블
  -- 상태 테이블
  -- 상품 테이블
*/
-- DBA 가 생성
-- 분류테이블 :: CATEGORIES :: CA
-- 상태테이블 :: STATES :: ST
-- 상품테이블 :: GOODS :: GO
CREATE TABLE CATEGORIES(
 CA_CODE        NCHAR(2),
 CA_NAME        NVARCHAR2(100)
)TABLESPACE USERS;
-- CONSTRAINTS : ALTER TABLE [TAB_NAME] [ADD|DROP] [CONSTRAINT] [CONST_NAME] [CONST_TYPE([COL_NAME])]
ALTER TABLE CATEGORIES ADD CONSTRAINT CA_CODE_PK PRIMARY KEY(CA_CODE);
  -- CHECK
  SELECT * FROM USER_CONSTRAINTS;
ALTER TABLE CATEGORIES DROP CONSTRAINT CA_CODE_PK;
  -- 제약조건의 활용
  INSERT INTO CATEGORIES(CA_CODE, CA_NAME) VALUES('S1', '비스켓류');
  INSERT INTO CATEGORIES(CA_CODE, CA_NAME) VALUES('S1', '쿠키');  -- 제약조건 위배
  INSERT INTO CATEGORIES(CA_CODE, CA_NAME) VALUES('S2', '비스켓류');
  -- DATA CHECK
  SELECT * FROM HOONZZANG.CATEGORIES;
  ROLLBACK;
  
 -- NOT NULL 제약조건
 ALTER TABLE HOONZZANG.CATEGORIES
 --MODIFY CA_NAME NOT NULL;
 MODIFY CA_NAME NULL; 
 -- NOT NULL 활용
 INSERT INTO CATEGORIES(CA_CODE, CA_NAME) VALUES('S1', '비스켓류');
 INSERT INTO CATEGORIES(CA_CODE, CA_NAME) VALUES('S2', NULL);  --> NOT NULL 제약에 위배
 INSERT INTO CATEGORIES(CA_CODE, CA_NAME) VALUES('S2', NULL);  --> NOT NULL 제약 삭제
 -- DATA CHECK
 SELECT * FROM HOONZZANG.CATEGORIES;
 -- NULL --> NOT NULL  
 ALTER TABLE HOONZZANG.CATEGORIES
 MODIFY CA_NAME NOT NULL;
 --> : 이미 해당 컬럼에 NULL 데이터가 존재하므로 변경 불가
 -- 문제가 되는 레코드를 삭제 하거나 NULL데이터를 업데이트 
 DELETE FROM CATEGORIES WHERE CA_CODE = 'S2';
 COMMIT;
 
 
CREATE TABLE STATES(
 ST_CODE        NUMBER(1,0),
 ST_NAME        NVARCHAR2(10)
)TABLESPACE USERS;

-- CONSTRAINTS
ALTER TABLE HOONZZANG.STATES
ADD CONSTRAINT ST_CODE_PK   PRIMARY KEY(ST_CODE);
ALTER TABLE HOONZZANG.STATES
MODIFY ST_NAME NOT NULL;


CREATE TABLE GOODS(
 GO_CODE        NCHAR(5),
 GO_NAME        NVARCHAR2(20),
 GO_COST        NUMBER(7,0),    
 GO_PRICE       NUMBER(7,0),
 GO_STOCKS      NUMBER(3,0),
 GO_DISCOUNT    NUMBER(2,0),
 GO_CACODE      NCHAR(2),
 GO_STCODE      NUMBER(1,0)
)TABLESPACE USERS;
ALTER TABLE HOONZZANG.GOODS
ADD CONSTRAINT GO_CODE_PK   PRIMARY KEY(GO_CODE);
ALTER TABLE HOONZZANG.GOODS
MODIFY GO_DISCOUNT DEFAULT 10 NOT NULL 
MODIFY GO_NAME NOT NULL
MODIFY GO_CACODE NOT NULL
MODIFY GO_STCODE NOT NULL
MODIFY GO_PRICE DEFAULT 0 NOT NULL
MODIFY GO_COST DEFAULT 0 NOT NULL
MODIFY GO_STOCKS DEFAULT 0 NOT NULL;

-- DEFAULT 
INSERT INTO GOODS(GO_CODE, GO_NAME, GO_COST, GO_PRICE, GO_STOCKS, GO_DISCOUNT, GO_CACODE, GO_STCODE)
VALUES('10001', 'KKK', DEFAULT, 1000, DEFAULT, DEFAULT, 'S1', 1 );
SELECT * FROM GOODS;
/* 자기 소유의 테이블 조회 */
SELECT * FROM USER_TABLES;

SELECT * FROM USER_CONSTRAINTS;